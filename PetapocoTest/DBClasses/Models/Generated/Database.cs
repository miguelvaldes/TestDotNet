// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `BaseConnection`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=localhost;Initial Catalog=Miguel_ArqQA;Persist Security Info=True;User Id=sa;Password=abc123`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace PetapocoTest.Models
{

	public partial class BaseConnectionDB : Database
	{
		public BaseConnectionDB() 
			: base("BaseConnection")
		{
			CommonConstruct();
		}

		public BaseConnectionDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			BaseConnectionDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static BaseConnectionDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new BaseConnectionDB();
        }

		[ThreadStatic] static BaseConnectionDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static BaseConnectionDB repo { get { return BaseConnectionDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    
	[TableName("TablaPrueba")]


	[PrimaryKey("IdTablaPrueba")]



	[ExplicitColumns]
    public partial class TablaPrueba : BaseConnectionDB.Record<TablaPrueba>  
    {



		[Column] public long IdTablaPrueba { get; set; }





		[Column] public string Descripcion { get; set; }





		[Column] public long? IdNivelSeveridad { get; set; }



	}

    
	[TableName("REG_NivelSeveridad")]


	[PrimaryKey("IdNivelSeveridad")]



	[ExplicitColumns]
    public partial class REG_NivelSeveridad : BaseConnectionDB.Record<REG_NivelSeveridad>  
    {



		[Column] public long IdNivelSeveridad { get; set; }





		[Column] public string Nombre { get; set; }





		[Column] public string Descripcion { get; set; }



	}

    
	[TableName("USR_Programador")]


	[PrimaryKey("IdProgramador")]



	[ExplicitColumns]
    public partial class USR_Programador : BaseConnectionDB.Record<USR_Programador>  
    {



		[Column] public long IdProgramador { get; set; }





		[Column] public string Ldap { get; set; }





		[Column] public string Correo { get; set; }



	}

    
	[TableName("PRO_Sistema")]


	[PrimaryKey("IdSistema")]



	[ExplicitColumns]
    public partial class PRO_Sistema : BaseConnectionDB.Record<PRO_Sistema>  
    {



		[Column] public long IdSistema { get; set; }





		[Column] public string NombreCliente { get; set; }





		[Column] public string NombreSistema { get; set; }



	}

    
	[TableName("PRO_Proyecto")]


	[PrimaryKey("IdProyecto")]



	[ExplicitColumns]
    public partial class PRO_Proyecto : BaseConnectionDB.Record<PRO_Proyecto>  
    {



		[Column] public long IdProyecto { get; set; }





		[Column] public long IdSistema { get; set; }





		[Column] public string Nombre { get; set; }



	}

    
	[TableName("REG_Perfil")]


	[PrimaryKey("IdPerfil")]



	[ExplicitColumns]
    public partial class REG_Perfil : BaseConnectionDB.Record<REG_Perfil>  
    {



		[Column] public long IdPerfil { get; set; }





		[Column] public string Nombre { get; set; }



	}

    
	[TableName("REG_Regla")]


	[PrimaryKey("IdRegla", autoIncrement=false)]

	[ExplicitColumns]
    public partial class REG_Regla : BaseConnectionDB.Record<REG_Regla>  
    {



		[Column] public long IdRegla { get; set; }





		[Column] public long IdNivelSeveridad { get; set; }





		[Column] public string Nombre { get; set; }





		[Column] public string Descripcion { get; set; }



	}

    
	[TableName("INC_EstadoIncidencia")]


	[PrimaryKey("IdEstado")]



	[ExplicitColumns]
    public partial class INC_EstadoIncidencium : BaseConnectionDB.Record<INC_EstadoIncidencium>  
    {



		[Column] public long IdEstado { get; set; }





		[Column] public string Nombre { get; set; }





		[Column] public string Descripcion { get; set; }



	}

    
	[TableName("INC_Incidencia")]


	[PrimaryKey("IdIncidencia")]



	[ExplicitColumns]
    public partial class INC_Incidencium : BaseConnectionDB.Record<INC_Incidencium>  
    {



		[Column] public long IdIncidencia { get; set; }





		[Column] public long? IdRegla { get; set; }





		[Column] public long? IdProgramador { get; set; }





		[Column] public long? IdProyecto { get; set; }





		[Column] public string Archivo { get; set; }





		[Column] public long? Linea { get; set; }





		[Column] public long? VersionSVN { get; set; }





		[Column] public bool? FalsoPositivo { get; set; }



	}

    
	[TableName("INC_Historial")]


	[PrimaryKey("IdHistorial")]



	[ExplicitColumns]
    public partial class INC_Historial : BaseConnectionDB.Record<INC_Historial>  
    {



		[Column] public long IdHistorial { get; set; }





		[Column] public long? IdIncidencia { get; set; }





		[Column] public long? IdEstado { get; set; }





		[Column] public DateTime? Fecha { get; set; }



	}

    
	[TableName("REG_Regla_Perfil")]


	[PrimaryKey("IdRegla", autoIncrement=false)]

	[ExplicitColumns]
    public partial class REG_Regla_Perfil : BaseConnectionDB.Record<REG_Regla_Perfil>  
    {



		[Column] public long IdRegla { get; set; }





		[Column] public long IdPerfil { get; set; }



	}

    
	[TableName("REG_Perfil_Proyecto")]


	[PrimaryKey("IdPerfil", autoIncrement=false)]

	[ExplicitColumns]
    public partial class REG_Perfil_Proyecto : BaseConnectionDB.Record<REG_Perfil_Proyecto>  
    {



		[Column] public long IdPerfil { get; set; }





		[Column] public long IdProyecto { get; set; }



	}

    
	[TableName("REG_Reglas_Excluidas")]


	[PrimaryKey("IdRegla", autoIncrement=false)]

	[ExplicitColumns]
    public partial class REG_Reglas_Excluida : BaseConnectionDB.Record<REG_Reglas_Excluida>  
    {



		[Column] public long IdRegla { get; set; }





		[Column] public long IdPerfil { get; set; }





		[Column] public long IdProyecto { get; set; }



	}


}



